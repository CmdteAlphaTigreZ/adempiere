<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<Migrations>
  <Migration EntityType="FMS" Name="Recreate Loan History" ReleaseNo="3.9.4" SeqNo="6430">
    <Step DBType="ALL" Parse="N" SeqNo="10" StepType="SQL">
      <SQLStatement>TRUNCATE TABLE FM_AmortizationSummary;
</SQLStatement>
    </Step>
    <Step DBType="ALL" Parse="N" SeqNo="20" StepType="SQL">
      <SQLStatement>INSERT INTO FM_AmortizationSummary(FM_AmortizationSummary_ID, AD_Client_ID, AD_Org_ID, Created, CreatedBy, Updated, UpdatedBy, IsActive, FM_Account_ID, DateDoc, CurrentCapitalAmt, CurrentInterestAmt, CurrentTaxAmt, CurrentDunningAmt, CurrentDunningTaxAmt)
SELECT MAX(nextidfunc((SELECT MAX(AD_Sequence_ID) FROM AD_Sequence WHERE Name = 'FM_AmortizationSummary')::integer, 'N')),
b.AD_Client_ID, 
b.AD_Org_ID, 
to_char(b.Created,  'YYYY-MM-DD')::timestamp without time zone, 
b.CreatedBy, to_char(b.Updated,  'YYYY-MM-DD')::timestamp without time zone, 
b.UpdatedBy, 
b.IsActive, 
b.FM_Account_ID, 
to_char(b.DateDoc,  'YYYY-MM-DD')::timestamp without time zone, 
a.CapitalAmt,
SUM(CASE WHEN tt.Type = 'LIN' THEN t.Amount ELSE 0 END) AS InterestAmt, 
SUM(CASE WHEN tt.Type = 'LIT' THEN t.Amount ELSE 0 END) AS TaxAmt,
SUM(CASE WHEN tt.Type = 'LDD' THEN t.Amount ELSE 0 END) AS DunningAmt,
SUM(CASE WHEN tt.Type = 'LDT' THEN t.Amount ELSE 0 END) AS DunningTaxAmt
FROM FM_Batch b 
INNER JOIN FM_Account a ON(a.FM_Account_ID = b.FM_Account_ID)
INNER JOIN FM_Transaction t ON(t.FM_Batch_ID = b.FM_Batch_ID)
INNER JOIN FM_TransactionType tt ON(tt.FM_TransactionType_ID = t.FM_TransactionType_ID)
WHERE tt.Type IN('LCC', 'LIN', 'LIT', 'LDD', 'LDT')
AND b.DocStatus IN('CO', 'CL')
GROUP BY 2, 3, 4, 5, 6, 7, 8, 9, 10, 11</SQLStatement>
    </Step>
  </Migration>
</Migrations>
